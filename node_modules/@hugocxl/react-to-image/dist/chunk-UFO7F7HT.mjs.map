{"version":3,"sources":["../src/hooks/factory.ts"],"sourcesContent":["// Dependencies\nimport { useReducer, useRef } from 'react'\n\n// Constants\nimport { INITIAL_STATE } from './constants'\n\n// Types\nimport { HookStateStatus } from './types'\nimport type { LibFn, LibFnReturn } from '../types'\nimport type {\n  Hook,\n  HookExtendedState,\n  HookOptions,\n  HookReturn,\n  HookState,\n  HookStateReducer\n} from './types'\n\nexport function createHook<F extends LibFn>(libFn: F): Hook<F> {\n  const stateReducer: HookStateReducer<F> = (state, action) => {\n    switch (action.type) {\n      case HookStateStatus.Loading:\n        return { ...state, status: HookStateStatus.Loading }\n      case HookStateStatus.Success:\n        return { ...state, status: HookStateStatus.Success, data: action.data }\n      case HookStateStatus.Error:\n        return {\n          ...state,\n          status: HookStateStatus.Error,\n          error: action.error\n        }\n      default:\n        return state\n    }\n  }\n\n  function getExtendedState({\n    status,\n    ...state\n  }: HookState<LibFnReturn<F>>): HookExtendedState<LibFnReturn<F>> {\n    return {\n      ...state,\n      status,\n      isError: status === HookStateStatus.Error,\n      isLoading: status === HookStateStatus.Loading,\n      isSuccess: status === HookStateStatus.Success,\n      isIdle: status === HookStateStatus.Idle\n    }\n  }\n\n  return function <E = unknown>(options?: HookOptions<F>): HookReturn<F, E> {\n    const nodeRef = useRef<E>()\n    const [state, dispatchAction] = useReducer(stateReducer, INITIAL_STATE)\n    const extendedState = getExtendedState(state)\n\n    function setNodeRef(node: E): void {\n      if (!nodeRef.current && node) nodeRef.current = node\n    }\n\n    async function getImage(): Promise<LibFnReturn<F> | null> {\n      try {\n        if (!nodeRef.current && !options?.selector) {\n          throw new Error(\n            'A dom element must be selected: use the selector option or the ref'\n          )\n        }\n\n        if (options?.onStart) options.onStart()\n\n        dispatchAction({ type: HookStateStatus.Loading })\n\n        if (options?.onLoading) options.onLoading()\n\n        const element = (\n          options?.selector\n            ? document.querySelector(options.selector)\n            : nodeRef.current\n        ) as HTMLElement\n        const data = (await libFn(element, options)) as LibFnReturn<F>\n\n        dispatchAction({ type: HookStateStatus.Success, data })\n\n        if (options?.onSuccess) options.onSuccess(data)\n\n        return data\n      } catch (error) {\n        const message = (error as Error)?.message || 'Unknown error'\n        console.error('Error generating image from component:', message)\n\n        dispatchAction({ type: HookStateStatus.Error, error: message })\n\n        if (options?.onError) options.onError(message)\n\n        return null\n      }\n    }\n\n    return [\n      extendedState,\n      () => {\n        getImage()\n      },\n      setNodeRef\n    ]\n  }\n}\n"],"mappings":"kFAAAA,IACA,OAAS,cAAAC,EAAY,UAAAC,MAAc,QAiB5B,SAASC,EAA4BC,EAAmB,CAC7D,IAAMC,EAAoC,CAACC,EAAOC,IAAW,CAC3D,OAAQA,EAAO,KAAM,CACnB,cACE,MAAO,CAAE,GAAGD,EAAO,gBAAgC,EACrD,cACE,MAAO,CAAE,GAAGA,EAAO,iBAAiC,KAAMC,EAAO,IAAK,EACxE,YACE,MAAO,CACL,GAAGD,EACH,eACA,MAAOC,EAAO,KAChB,EACF,QACE,OAAOD,CACX,CACF,EAEA,SAASE,EAAiB,CACxB,OAAAC,EACA,GAAGH,CACL,EAAiE,CAC/D,MAAO,CACL,GAAGA,EACH,OAAAG,EACA,QAASA,YACT,UAAWA,cACX,UAAWA,cACX,OAAQA,UACV,CACF,CAEA,OAAO,SAAuBC,EAA4C,CACxE,IAAMC,EAAUC,EAAU,EACpB,CAACN,EAAOO,CAAc,EAAIC,EAAWT,EAAcU,CAAa,EAChEC,EAAgBR,EAAiBF,CAAK,EAE5C,SAASW,EAAWC,EAAe,CAC7B,CAACP,EAAQ,SAAWO,IAAMP,EAAQ,QAAUO,EAClD,CAEA,eAAeC,GAA2C,CACxD,GAAI,CACF,GAAI,CAACR,EAAQ,SAAW,CAACD,GAAS,SAChC,MAAM,IAAI,MACR,oEACF,EAGEA,GAAS,SAASA,EAAQ,QAAQ,EAEtCG,EAAe,CAAE,cAA8B,CAAC,EAE5CH,GAAS,WAAWA,EAAQ,UAAU,EAE1C,IAAMU,EACJV,GAAS,SACL,SAAS,cAAcA,EAAQ,QAAQ,EACvCC,EAAQ,QAERU,EAAQ,MAAMjB,EAAMgB,EAASV,CAAO,EAE1C,OAAAG,EAAe,CAAE,eAA+B,KAAAQ,CAAK,CAAC,EAElDX,GAAS,WAAWA,EAAQ,UAAUW,CAAI,EAEvCA,CACT,OAASC,EAAO,CACd,IAAMC,EAAWD,GAAiB,SAAW,gBAC7C,eAAQ,MAAM,yCAA0CC,CAAO,EAE/DV,EAAe,CAAE,aAA6B,MAAOU,CAAQ,CAAC,EAE1Db,GAAS,SAASA,EAAQ,QAAQa,CAAO,EAEtC,IACT,CACF,CAEA,MAAO,CACLP,EACA,IAAM,CACJG,EAAS,CACX,EACAF,CACF,CACF,CACF","names":["init_esm_shims","useReducer","useRef","createHook","libFn","stateReducer","state","action","getExtendedState","status","options","nodeRef","useRef","dispatchAction","useReducer","INITIAL_STATE","extendedState","setNodeRef","node","getImage","element","data","error","message"]}